{"version":3,"sources":["Introduction.js","SearchBar.js","ContactList.js","Title.js","ContactPanel.js","App.js","index.js"],"names":["Introduction","react_default","a","createElement","className","SearchBar","props","id","type","placeholder","onChange","input","document","getElementById","value","setSearch","ContactList","displayArr","contacts","map","contact","index","key","name","phone","email","username","website","company","catchPhrase","bs","address","suite","street","city","zipcode","length","Title","ContactPanel","_useState","useState","_useState2","Object","slicedToArray","contactArr","setContactArr","_useState3","_useState4","search","fetch","then","response","json","keyWords","split","dispArr","i","j","word","trim","toLowerCase","includes","push","sort","b","src_Title_0","src_SearchBar_0","src_ContactList_0","App","title","src_Introduction_0","src_ContactPanel_0","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.3cbf5737.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Introduction.css\";\n\nconst Introduction = () => {\n\n    return (\n        \n        <div className=\"introduction\">\n            <h1>Welcome to Yubai's Contact List Example</h1>\n            <p>This is a contact list web app show case. The interaction is limited to view contacts at this stage.</p>\n            <p>Type keywords (case insensitive) in the search bar to find contacts. If more than one keywords are in there, contacts fitting any of them would be displayed.</p>\n        </div>\n    );\n};\n\n\nexport default Introduction","import React from \"react\";\n\nimport \"./SearchBar.css\"\n\nconst SearchBar = (props) => {\n\n    const handleSearchBar = () => {\n        let input = document.getElementById(\"searchInput\").value;\n        props.setSearch(input);\n    }\n\n    return (\n        \n        <div className=\"search-bar\">\n            <input id=\"searchInput\" type=\"text\" placeholder=\"Search by typing..\" onChange={handleSearchBar} />\n        </div>\n    );\n};\n\n\nexport default SearchBar","import React, {useState} from \"react\";\n\nimport \"./ContactList.css\";\n\n\nconst ContactList = (props) => {\n\n  let displayArr = props.contacts;\n\n    const contacts = displayArr.map(\n        (contact, index) =>\n            <tr key={index} className = {\"contact\" + index%2}>\n                <td><b>{contact.name}</b><br/>{contact.phone}<br/>{contact.email}</td>\n                <td><i>{contact.username}</i><br/>{contact.website}</td>\n                <td>{contact.company.name}<br/><i>\"{contact.company.catchPhrase}\"<br/>{contact.company.bs}</i></td>\n                <td>{contact.address.suite} {contact.address.street}<br/>{contact.address.city} {contact.address.zipcode}</td>\n            </tr>\n        );\n\n\n    return (\n      <div>\n      {displayArr.length === 0 &&\n        <div className = \"Loading\">\n          <h2>Loading Contact List.</h2>\n        </div>\n      }\n      {displayArr.length > 0 && \n        <div className=\"contact-list\">\n            <table>\n                <thead className=\"table-header\">\n                <tr>\n                    <th>Contact Details</th>\n                    <th>User Details</th>\n                    <th>Company</th>\n                    <th>Address</th>\n                </tr>\n                </thead>\n\n                <tbody className=\"table-body\">\n                {contacts}\n                </tbody>\n\n            </table>\n        </div>\n      }\n      </div>\n    );\n};\n\n\nexport default ContactList","import React from \"react\";\n\nimport \"./Title.css\"\n\nconst Title = () => {\n\n    return (\n        \n        <div className=\"title\">\n            <h1>My Contacts</h1>\n        </div>\n    );\n};\n\n\nexport default Title","import React, {useState} from \"react\"\nimport SearchBar from \"./SearchBar\"\nimport ContactList from \"./ContactList\"\nimport Title from \"./Title\"\n\nimport \"./ContactPanel.css\"\n\nconst ContactPanel = () => {\n\n    const [contactArr, setContactArr] = useState([]);\n    const [search, setSearch] = useState(\"\");\n\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(json => setContactArr(json))\n\n    let keyWords = search.split(\" \");\n\n    let dispArr = [];\n\n    if (keyWords.length !== 0 && contactArr.length !== 0) {\n        for (let i = 0; i < contactArr.length; i++) {\n            let contact = contactArr[i];\n            for (let j = 0; j < keyWords.length; j++) {\n                let word = keyWords[j];\n                word = word.trim().toLowerCase();\n                if (word === \"\") continue;\n                if (contact.name.toLowerCase().includes(word) ||\n                    contact.email.toLowerCase().includes(word) ||\n                    contact.phone.toLowerCase().includes(word) ||\n                    contact.username.toLowerCase().includes(word) ||\n                    contact.website.toLowerCase().includes(word) ||\n                    contact.address.street.toLowerCase().includes(word) ||\n                    contact.address.suite.toLowerCase().includes(word) ||\n                    contact.address.city.toLowerCase().includes(word) ||\n                    contact.address.zipcode.toLowerCase().includes(word) ||\n                    contact.company.name.toLowerCase().includes(word) ||\n                    contact.company.catchPhrase.toLowerCase().includes(word) ||\n                    contact.company.bs.toLowerCase().includes(word)) {\n                        dispArr.push(contact);\n                        break;\n                    }\n\n            }\n        }\n    }\n\n    if (dispArr.length === 0) dispArr = contactArr;\n\n    dispArr.sort( function( a, b ) {\n        a = a.name.toLowerCase();\n        b = b.name.toLowerCase();\n    \n        return a < b ? -1 : a > b ? 1 : 0;\n    });\n\n    return (\n        \n        <div className=\"contact-panel\">\n            <Title />\n            <SearchBar setSearch = {setSearch}/>\n            <ContactList contacts = {dispArr}/>\n        </div>\n    );\n};\n\n\nexport default ContactPanel","import React, {useState} from \"react\";\nimport Introduction from \"./Introduction\";\nimport ContactPanel from \"./ContactPanel\";\n\nimport \"./App.css\";\n\nconst App = () => {\n\n    document.title = \"Contact List\";\n\n \n    return (\n        \n        <div className=\"app-container\">\n            <Introduction />\n            <ContactPanel />\n        </div>\n    );\n};\n\n\nexport default App","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}